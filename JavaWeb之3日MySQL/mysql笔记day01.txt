MySQL课堂笔记
Day01
1.SQL，db，dbms他们之间的关系？
sql：
结构化查询语言，是一门标准通用的语言。标准的sql适合于所有的数据库产品
DB：数据库
DBMS：数据库管理系统，DBMS负责执行sql语句，通过执行sql语句操作DB中的数据

2.什么是表？
表：table
表：table是数据库的基板组成单元，所有数据都以表格的形式组织，目的是可读性强

一个表包括行和列：
行：被称为数据/记录（data）
列：被称为字段（column）
学号(int)   姓名(varchar)   年龄(int)
-----------------------------------
110        张三            20
120        李四            21
每一个字段应该包括那些属性？
字段名、数据类型、相关的约束

3.学习mysql主要还是学习通用的SQL 语句，那么SQL语句包括增删改查，SQL语句怎么分类呢？
DQL（数据查询语言）：查询语句，凡是select语句都是DQL
DML（数据操作语言）：insert delete update，对表中的数据进行增删改
DDL（数据定义语言）：create drop alter，对表结构的增删改
TCL（事务控制语言）：commit提交事务，rollback回滚事务。（TCL中的T是transaction）
DCL（数据控制语言）：grant授权、revoke撤销权限等。

4、导入数据（后期大家练习的时候使用这个演示的数据）
第一步：登陆mysql数据库管理系统
dos命令窗口：
mysql -uroot -ppassword
第二步：查看有哪些数据库
show databases;（这个不是sql语句，属于 MYSQL的命令）
第三步：创建属于我们自己的数据库
create database bjpowernode;（这个不是sql语句，属于 MYSQL的命令）
第四步： 使用bipowernode数据
use bjpowernode;（这个不是sql语句，属于MYSQL的命令。）
第五步：
查看当前使用的数据库中有那些表？
show tables;
第六步：初始化数据
source  .sql文件绝对路径(文件名bjpowernode.sql)

5、bipowernode.sql,这个文件以sql结尾，这样的文件被称为“sql脚本”。什么是sql脚本呢？
当一个文件的扩展名是.sql，并且该文件中编写了大量的sql语句，我们称这样的文件为sql脚本。
注意：直接使用source命令可以执行sql脚本。
sql脚本中的数据量太大的时侯，无法打开，请使用source命令完成初始化。

6、删除数据库：drop database bjpowernode；

7、查看表结构：desc dept;
mysql> show tables;
+-----------------------+
| Tables_in_bjpowernode |
+-----------------------+
| dept                  |(部门表)
| emp                   |(员工表)
| salgrade              |(工资等级表)
+-----------------------+

mysql> desc dept;
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| DEPTNO | int(2)      | NO   | PRI | NULL    |       |		部门编号
| DNAME  | varchar(14) | YES  |     | NULL    |       |		部门名称
| LOC    | varchar(13) | YES  |     | NULL    |       |		部门位置
+--------+-------------+------+-----+---------+-------+

mysql> desc emp;
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| EMPNO    | int(4)      | NO   | PRI | NULL    |       |	员工编号
| ENAME    | varchar(10) | YES  |     | NULL    |       |	员工姓名
| JOB      | varchar(9)  | YES  |     | NULL    |       |	工作岗位
| MGR      | int(4)      | YES  |     | NULL    |       |	上级领导编号
| HIREDATE | date        | YES  |     | NULL    |       |	入职日期
| SAL      | double(7,2) | YES  |     | NULL    |       |	月薪
| COMM     | double(7,2) | YES  |     | NULL    |       |	津贴
| DEPTNO   | int(2)      | YES  |     | NULL    |       |	部门编号
+----------+-------------+------+-----+---------+-------+

mysql> desc salgrade;
+-------+---------+------+-----+---------+-------+
| Field | Type    | Null | Key | Default | Extra |
+-------+---------+------+-----+---------+-------+
| GRADE | int(11) | YES  |     | NULL    |       |		等级
| LOSAL | int(11) | YES  |     | NULL    |       |		最低薪资
| HISAL | int(11) | YES  |     | NULL    |       |		最高薪资
+-------+---------+------+-----+---------+-------+

8、表中的数据 ?
mysql> select * from emp;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+

mysql> select * from dept;
+--------+------------+----------+
| DEPTNO | DNAME      | LOC      |
+--------+------------+----------+
|     10 | ACCOUNTING | NEW YORK |
|     20 | RESEARCH   | DALLAS   |
|     30 | SALES      | CHICAGO  |
|     40 | OPERATIONS | BOSTON   |
+--------+------------+----------+

mysql> select * from salgrade;
+-------+-------+-------+
| GRADE | LOSAL | HISAL |
+-------+-------+-------+
|     1 |   700 |  1200 |
|     2 |  1201 |  1400 |
|     3 |  1401 |  2000 |
|     4 |  2001 |  3000 |
|     5 |  3001 |  9999 |
+-------+-------+-------+

9、常用命令？
mysql> select databases; 查看当前使用的是哪个数据库
+-------------+
| database()  |
+-------------+
| bjpowernode |
+-------------+

mysql> select version(); 查看mysql的版本号
+------------+
| version()  |
+------------+
| 5.7.36-log |
+------------+

\c 命令,结束一条语句
exit 退出mysql

10、查看创建表的语句：
show create table emp;

11、简单的查询语句（DQL）
语法格式：
select 字段名1,字段名2,字段名3,.... from 表名;
提示：
	1、任何一条sql语句以“;” 结尾；
	2、sql语句不区分大小写。
查询员工的年薪？
	mysql> select ename,sal * 12 from emp;
+--------+----------+
| ename  | sal * 12 |
+--------+----------+
| SMITH  |  9600.00 |
| ALLEN  | 19200.00 |
| WARD   | 15000.00 |
| JONES  | 35700.00 |
| MARTIN | 15000.00 |
| BLAKE  | 34200.00 |
| CLARK  | 29400.00 |
| SCOTT  | 36000.00 |
| KING   | 60000.00 |
| TURNER | 18000.00 |
| ADAMS  | 13200.00 |
| JAMES  | 11400.00 |
| FORD   | 36000.00 |
| MILLER | 15600.00 |
+--------+----------+
给查看结果的列重命名？
	select ename,sal*12 as yearsal from emp;
别名中有中文？
	select ename,sal*12 as 年薪 from emp;//错误
	select ename,sal*12 as '年薪' from emp;
注意：
	1、 标准sql语句中要求字符串使用单引号括起来。虽然mysql支持双引号，尽量别用。
	2、as关键字可以省略
	select empno,ename,sal * 12 yearsal from emp;
查询所有字段？
	select *from emp; // 实际开发中不建议使用

12、条件查询
语法格式：
	select
		字段,字段......
	from 
		表名
	where
		条件；
执行顺序：先from，然后where，最后select 

查询员工工资等于5000的姓名？
select ename from emp where sal=5000;
+-------+
| ename |
+-------+
| KING  |
+-------+

查询SMITH的工资？
select sal from emp where ename='SMITH'；//字符串使用单引号

找出工资高于3000的员工？
select ename,sal from emp where sal>3000;

找出工资不等于3000的？
select ename,sal from emp where sal <> 3000;
select ename,sal from emp where sal != 3000;

找出工资在1100和3000的员工，包括1100和3000？
select ename,sal from emp where sal >=1100 and sal<=3000; //between...and...是闭区间[1100,3000]

select ename,sal from emp where sal between 1100 and 3000 

注意：between ...and...左小右大

between and 除了可以使用在数字方面之外，还可以使用在字符串方面。
select ename from emp where ename between 'A' and 'C'(左闭右开)

找出哪些人津贴不为NULL?在数据库中NULL不是一个值,代表什么也没有,为空,空不是一个值,不能用等号衡量,必须使用is null或者is not null
	select ename,sal,comm from emp where comm is null;
找出哪些人津贴为空
	select ename,sal,comm from emp where comm is null or comm = 0;

找出薪资大于1000的并且部门编号是20或30的员工
	select ename,sal,deptno from emp where sal > 1000 and deptno = 20 or deptno = 30;
	and优先级高,前两个条件会优先匹配
	select ename,sal,deptno from emp where sal > 1000 and (deptno = 20 or deptno = 30);
	注意:运算符优先级不确定加小括号

in等同or:找出工作岗位是MANAGER和SALESMAN的员工?
	select ename,job from emp where job = ‘MANAGER’ or job = ‘SALESMAN’;
	select ename,job from emp where job in( ‘MANAGER’, ‘SALESMAN’);
not in:不在这几个值当中

模糊查询like?
找出名字当中含有o的?(在模糊查询中要掌握%和_两符号)
%代表任意多个字符,_代表任意1个字符
	select ename from emp where ename like '%O%';
+-------+
| ename |
+-------+
| JONES |
| SCOTT |
| FORD  |
+-------+
	select ename from emp where ename like '_A%';
+--------+
| ename  |
+--------+
| WARD   |
| MARTIN |
| JAMES  |
+--------+
找出名字中有下划线的?
	select ename from emp where ename like ‘%\_%’;

13、排序（升序、降序）
按照工资升序，找出员工名和薪资？
	select 
		ename,sal
	from
		emp
	order by 
		sal; 

注意：默认是升序，怎么制定升序或者降序呢？asc表示指定升序，desc 表示降序。
	select ename,sal from emp order by sal;//升序
	select ename,sal from emp order by sal asc;//升序
	select ename,sal from emp order by sal desc;//降序

按照工资的降序排列，当工资相同的时候再按照名字的升序排列。
	select ename,sal from emp order by sal desc,ename asc;
注意：越靠前的字段月能起到主导作用。只有当前面的字段无法完成排序的时候，才会启用后面的字段。

找出工作岗位是SALESMAN的员工，并且要求按照薪资的降序排列。
select 
	ename,job,sal
from
	emp
where
	job='SALEMAN'
order by 
	sal desc;
+--------+----------+---------+
| ename  | job      | sal     |
+--------+----------+---------+
| ALLEN  | SALESMAN | 1600.00 |
| TURNER | SALESMAN | 1500.00 |
| WARD   | SALESMAN | 1250.00 |
| MARTIN | SALESMAN | 1250.00 |
+--------+----------+---------+
执行顺序：
select 	
	*			3
from
	Tablename	1
where
	条件			2
order by 
	...; 		4
order by最后执行

14、分组函数？
count 计数
sum 求和
avg 平均值
max 最大值
min 最小值

记住：所有的分组函数都是对“某一组”数据进行操作的

找出工资总和？
	select sum(sal) from emp;
找出最高工资？
	select man(sal) from emp;
找出最低工资？
	select min(sal) from emp;
找出平均工资？
	select avg(sal)from emp；
找出总人数？
	select count（*）from emp；
	select count(ename) from emp;

分组函数一共有5个
分组函数还有另一个名字:多行处理函数
多行处理函数的特点:输入多行,最终输出的结果是一行

分组函数自动忽略NULL。
	select count(comm) from emp;
+-------------+
| count(comm) |
+-------------+
|           4 |
+-------------+
	select sum(comm) from emp;//结果不为null,说明忽略了null
+-----------+
| sum(comm) |
+-----------+
|   2200.00 |
+-----------+
	select sum(comm) from emp where comm is not null;//多余过滤条件

找出工资高于平均工资的员工？
	select avg(sal) from emp;
+-------------+
| avg(sal)    |
+-------------+
| 2073.214286 |
+-------------+
	select ename,sal,from emp where sal > avg(sal);//ERROR 1111 (HY000):Invalid use of group function
原因:SQL语句有一个语法规则,分组函数不可直接使用在where子句当中
因为group by是在where执行之后才会执行的,group by分组后才能用分组函数
select			5
	...
from				1
	...
where			2
	...
group by			3
	...
having			4
	...
order by			6
	...

解决:
第一步:找出平均工资
select avg(sal) from emp;
+-------------+
| avg(sal)    |
+-------------+
| 2073.214286 |
+-------------+
第二步:找出高于平均工资的员工
select ename,sal from emp where sal > 2073.214286;
+-------+---------+
| ename | sal     |
+-------+---------+
| JONES | 2975.00 |
| BLAKE | 2850.00 |
| CLARK | 2450.00 |
| SCOTT | 3000.00 |
| KING  | 5000.00 |
| FORD  | 3000.00 |
+-------+---------+
结合:select ename,sal from emp where sal > (select avg(sal) from emp);

count(*)和count(某个具体的字段),他们有什么区别。
count(*)：不是统计某个字段中数据的个数，而是统计总记录条数(和某个字段无关)
count（comm）：表示统计comm字段中不为NULL的数据总数量

分组函数也能组合起来使用:
select count(*),sum(sal),avg(sal),max(sal),min(sal) from emp;
+----------+----------+-------------+----------+----------+
| count(*) | sum(sal) | avg(sal)    | max(sal) | min(sal) |
+----------+----------+-------------+----------+----------+
|       14 | 29025.00 | 2073.214286 |  5000.00 |   800.00 |
+----------+----------+-------------+----------+----------+

15、单行处理函数
什么是单行处理函数？
输入一行，输出一行。
计算每个员工的年薪？
重点:只要数学表达式含有null 最后结果一定为null
	select ename,(sal+comm)*12 yearsal from emp;
使用ifnull函数:
	select ename,(sal+ifnull(comm,0))*12 as yearsal from emp;
+--------+----------+
| ename  | yearsal  |
+--------+----------+
| SMITH  |  9600.00 |
| ALLEN  | 22800.00 |
| WARD   | 21000.00 |
| JONES  | 35700.00 |
| MARTIN | 31800.00 |
| BLAKE  | 34200.00 |
| CLARK  | 29400.00 |
| SCOTT  | 36000.00 |
| KING   | 60000.00 |
| TURNER | 18000.00 |
| ADAMS  | 13200.00 |
| JAMES  | 11400.00 |
| FORD   | 36000.00 |
| MILLER | 15600.00 |
+--------+----------+

ifnull() 空处理函数？
Ifnull(可能为NULL的数据,被当做什么处理):属于单行处理函数
select ename,ifnull(comm,0) as comm from emp;

16、group by 和having
group by:按照某个字段或者某些字段进行分组。
having:having是对分组之后的数据进行再次过滤

案例:找出每个工作岗位的最高薪资。
select max(sal) from emp group by job;
+----------+
| max(sal) |
+----------+
|  3000.00 |
|  1300.00 |
|  2975.00 |
|  5000.00 |
|  1600.00 |
+----------+
先from再group by再select

注意:分组函数一般都会和group by 联合使用，这也是为什么它被称为分组函数的原因。并且任何一个分组函数（count sum avg max min）都是在group by语句执行结束之后才会执行的。当一条sql语句没有group by的话，整张表的数据会自成一组。

select ename,max(sal),job from emp group by job;
以上在mysql中，查询结果是有的，但是结果没有意义，在oracle数据库当中会报错。语法错误。oracle的语法规则比mysql语法规则严谨。
记住一个规则:当一条语句中有group by 的话，select 后面之后只能跟分组函数和参与分组的字段。

每个工作岗位的平均薪资？
select job,avg(sal) from emp group by job;
+-----------+-------------+
| job       | avg(sal)    |
+-----------+-------------+
| ANALYST   | 3000.000000 |
| CLERK     | 1037.500000 |
| MANAGER   | 2758.333333 |
| PRESIDENT | 5000.000000 |
| SALESMAN  | 1400.000000 |
+-----------+-------------+

多个字段能不能联合起来一块分组？
案例:找出每个部门不同工作岗位的最高薪资。
select 
	deptno,job,max(sal)
from
	emp
group by
	deptno,job;
+--------+-----------+----------+
| deptno | job       | max(sal) |
+--------+-----------+----------+
|     10 | CLERK     |  1300.00 |
|     10 | MANAGER   |  2450.00 |
|     10 | PRESIDENT |  5000.00 |
|     20 | ANALYST   |  3000.00 |
|     20 | CLERK     |  1100.00 |
|     20 | MANAGER   |  2975.00 |
|     30 | CLERK     |   950.00 |
|     30 | MANAGER   |  2850.00 |
|     30 | SALESMAN  |  1600.00 |
+--------+-----------+----------+

找出每个部门的最高薪资，要求显示薪资大于2900的数据。
第一步：找出每个部门的最高薪资
select max(sal),deptno from emp group by deptno;
+----------+--------+
| max(sal) | deptno |
+----------+--------+
|  5000.00 |     10 |
|  3000.00 |     20 |
|  2850.00 |     30 |
+----------+--------+
第二步：找出薪资大于2900
select max(sal),deptno from emp group by deptno having max(sal) > 2900;//这种方式效率低。
+----------+--------+
| max(sal) | deptno |
+----------+--------+
|  5000.00 |     10 |
|  3000.00 |     20 |
+----------+--------+
select max(sal),deptno from emp where sal > 2900 group by deptno;//这种方式效率高

找出每个部门的平均薪资，要求显示薪资大于2000的数据
第一步：找出每个部门的平均薪资
select avg(sal),deptno from emp group by deptno;
+-------------+--------+
| avg(sal)    | deptno |
+-------------+--------+
| 2916.666667 |     10 |
| 2175.000000 |     20 |
| 1566.666667 |     30 |
+-------------+--------+
第二步：要求显示薪资大于2000的数据
select avg(sal),deptno from emp group by deptno having avg(sal)>2000;
+-------------+--------+
| avg(sal)    | deptno |
+-------------+--------+
| 2916.666667 |     10 |
| 2175.000000 |     20 |
+-------------+--------+
where后面不能使用分组函数:
	select deptno,avg(sal) from emp where avg(sal) > 2000 group by deptno;//错误

17、总结一个完整的DQL语句怎么写？
select     5
	...
from       1
	...
where      2
	...
group by   3
	...
having     4
	...
order by   6
	...


day01结束~~~